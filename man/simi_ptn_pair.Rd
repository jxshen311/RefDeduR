% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_calculate_similarity_pairwise.R
\name{simi_ptn_pair}
\alias{simi_ptn_pair}
\title{Calculate pairwise string similarity}
\usage{
simi_ptn_pair(df, partition_by = "first_two_letters_first_author_last_name")
}
\arguments{
\item{df}{A data frame with bibliographic information that has gone through text normalization. \code{df} must have the following columns \code{c("title_norm", "abstract_norm")}.}

\item{partition_by}{Quoted name of the column by which to partition the rows. Defaults to \code{"first_two_letters_first_author_last_name"}. Can be \code{FALSE} if prefer not to partition, in which case all records are compared against all others.

Besides the default, \code{"year"} is another popular partitioning parameter. We recommend the default method if papers in your dataset are not evenly distributed across years. For instance, if most papers are recent, the dafault method will be much more efficient than \code{"year"}. Additionally, with the prevalence of preprints, partitioning by \code{"year"} becomes less accurate.

In addition, you can also construct a custom "partition" column.}
}
\value{
Two list of data frames. (1) A list of data frames containing the partitioned \code{df}; (2) A list of data frames with string similarity results for \code{"title_norm"} and \code{"abstract_norm"}.
}
\description{
The function calculates pairwise similarity based on Levenshtein edit distance for columns \code{"title_norm"} and \code{"abstract_norm"} between records within the same group after partitioning. Range of similarity is [0, 1]. \code{Similarity == 1} means 100\% identical while \code{Similarity == 0} means completely different.
}
\details{
An artificial code "00" is assigned to cells with missing values in the \code{partition_by} column and these rows are partitioned into one group. If you customize your own partitioning parameter, try to avoid this artificial code.

Computing time estimation according to past experience: ~ 23 min for a data frame with 3837 rows on a Macbook Pro (Apple M1 Pro chip basic model, memory: 16 GB).
}
\examples{
\dontrun{
# load example dataset
data(bib_example_small)

# text normalization of the data frame
df <- norm_df(bib_example_small)

# calculate similarity
c(ls_df, ls_df_simi) \%<-\% simi_ptn_pair(df, partition_by = "first_two_letters_first_author_last_name")
}
}
